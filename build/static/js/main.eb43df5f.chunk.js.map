{"version":3,"sources":["components/Header.js","components/MessageBoard.js","components/Home.js","components/Messanger.js","components/authentication/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useContext","userContext","userAccessData","setUserAccessData","useAuth0","user","isAuthenticated","logout","Navbar","bg","expand","className","Container","to","Brand","style","color","Toggle","Collapse","id","Nav","Link","name","Button","onClick","MessageBoard","Home","loginWithRedirect","socket","io","Messanger","useState","messangerUsers","setMessangerUsers","messageList","setMessageList","currentRoom","setCurrentRoom","message","room","isPrivate","messangerMessage","setMessangerMessage","enteringRoom","event","oldRoom","newRoom","target","textContent","emit","privateMessage","roomname","activeUserList","forEach","username","on","userList","useEffect","newMessage","Row","Col","xs","Card","email","map","messanger","index","onSubmit","preventDefault","type","class","value","onChange","required","Profile","src","picture","alt","disabled","for","placeholder","readonly","locale","updated_at","createContext","App","React","token","undefined","isLoggedIn","a","localStorage","getItem","setItem","axios","post","headers","tokenResponse","console","log","data","get","userResponse","Provider","path","exact","component","withRouter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.eb43df5f.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { userContext } from '../App';\r\nimport { Link } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nfunction Header() {\r\n    const { userAccessData, setUserAccessData } = useContext(userContext);\r\n    const { user, isAuthenticated } = useAuth0();\r\n    const { logout } = useAuth0();\r\n\r\n    // const logOut = () => {\r\n    //     setUserAccessData({\r\n    //         token: undefined,\r\n    //         user: undefined,\r\n    //     });\r\n    //     localStorage.setItem('auth-token', '');\r\n    // };\r\n    return (\r\n        <>\r\n          {/* we need to check if the user is authenticated or not before granting access\r\n          so if the user is not authenticated the second condition would run else the first*/}\r\n            {isAuthenticated ? (\r\n                <Navbar\r\n                    bg='navbar-dark bg-success'\r\n                    expand='lg'\r\n                    className='navbar navbar-expand-lg navbar-dark bg-success'\r\n                >\r\n                    <Container>\r\n                        <LinkContainer to='/'>\r\n                           <Navbar.Brand style={{ color: 'grey' }}>Live Messanger</Navbar.Brand>\r\n                        </LinkContainer>\r\n                        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                        <Navbar.Collapse id='basic-navbar-nav'>\r\n                           <Nav className='ml-auto'>\r\n                              <LinkContainer to='/message'>\r\n                                <Nav.Link>Send Message</Nav.Link>\r\n                              </LinkContainer>\r\n                              <LinkContainer to='/profile'>\r\n                                 <Nav.Link>Profile ({user.name})</Nav.Link>\r\n                              </LinkContainer>\r\n                            </Nav>\r\n                            <Button className='btn btn-danger' onClick={()=>logout()}>\r\n                                Log Out\r\n                            </Button>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            ) :\r\n                (\r\n                    <Navbar\r\n                        bg='navbar-dark bg-success'\r\n                        expand='lg'\r\n                        className='navbar navbar-expand-lg navbar-dark bg-success'\r\n                    >\r\n                        <Container>\r\n                            <LinkContainer to='/'>\r\n                                <Navbar.Brand style={{ color: 'grey'}}>Live Messanger</Navbar.Brand>\r\n                            </LinkContainer>\r\n                            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                            <Navbar.Collapse id='basic-navbar-nav'>\r\n                                <Nav className='ml-auto'></Nav>\r\n                            </Navbar.Collapse>\r\n                        </Container>\r\n                    </Navbar>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst MessageBoard = () => {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div className=\"App\">\r\n                    <h3>Now you can chat with anyone....</h3>\r\n                </div>\r\n            </Container>\r\n            \r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default MessageBoard;\r\n","import { useAuth0 } from '@auth0/auth0-react';\r\nimport React from 'react';\r\nimport MessageBoard from './MessageBoard';\r\nimport './../App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Home = () => {\r\n    const { loginWithRedirect } = useAuth0();\r\n    const { user, isAuthenticated } = useAuth0();\r\n    return (\r\n        <>\r\n            {isAuthenticated ? (<MessageBoard />) : (<Container>\r\n                <div className=\"App\">\r\n\r\n                    <h1>Hello Welcome To Our World</h1>\r\n                    <br />\r\n                    <h4>\r\n                        Just sign up and log in and you are good to go.\r\n                    </h4>\r\n                    <br />\r\n                    <Button className='btn btn-success btn-large'\r\n                        onClick={() => loginWithRedirect()}\r\n                    >\r\n                        Register or Login\r\n                    </Button>\r\n                </div>\r\n                \r\n\r\n            </Container>\r\n            )\r\n            }\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n","import React, { useState, useEffect} from 'react';\r\n// import { userContext } from '../App';\r\nimport io from 'socket.io-client';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Container, Col, Row, Card } from 'react-bootstrap';\r\nimport './../App.css';\r\n\r\nconst socket = io();\r\n\r\n\r\nconst Messanger = () => {\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  // const { users, setUsers } = useContext(userContext);\r\n\r\n  const [messangerUsers, setMessangerUsers] = useState([]); //chatusers\r\n\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n  const [currentRoom, setCurrentRoom] = useState(user.name);\r\n\r\n  const [messangerMessage, setMessangerMessage] = useState({\r\n    name: '',\r\n    message: '',\r\n    room: '',\r\n    isPrivate: false,\r\n  });//chatmessage\r\n\r\n  // all our necessary functions\r\n  const userJoins = () => {\r\n    socket.emit('userJoin', user.name);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    //we need to set the every message to our state so we use the spread factor to make a \r\n    //a copy of the messages and then update our statw\r\n    setMessangerMessage({\r\n      ...messangerMessage,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const submitNewMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newMessage = {\r\n      name: messangerMessage.name,\r\n      message: messangerMessage.message,\r\n      room: currentRoom,\r\n      isPrivate: privateMessage(currentRoom, messangerUsers),\r\n    };\r\n\r\n    socket.emit('newMessage', newMessage);\r\n\r\n    setMessangerMessage({ name: user.name, message: '' });\r\n  };\r\n\r\n  const enteringRoom = (event) => {\r\n    let oldRoom = currentRoom;\r\n    let newRoom = event.target.textContent;\r\n    setCurrentRoom(newRoom);\r\n    socket.emit('roomEntered', { oldRoom, newRoom });\r\n    setMessageList([]);\r\n  };\r\n\r\n  const privateMessage = (roomname, activeUserList) => {\r\n    let isPrivate = false;\r\n    activeUserList.forEach((username) => {\r\n      if (username === roomname) {\r\n        isPrivate = true;\r\n      }\r\n    });\r\n\r\n    return isPrivate;\r\n  };\r\n  //////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // we now need a way to listen on our socket channel for new and active users \r\n  socket.on('userList', (userList) => {\r\n    setMessangerUsers(userList);\r\n    setMessangerMessage({\r\n      name: user.name,\r\n      message: messangerMessage.message\r\n    });\r\n  });\r\n\r\n \r\n  useEffect(() => {\r\n    userJoins();\r\n  }, []);\r\n\r\n\r\n  //we need to listen on our socket channel for messages being sent from the server as well\r\n  socket.on('newMessage', (newMessage) => {\r\n    setMessageList([\r\n      ...messageList,\r\n      {\r\n        name: newMessage.name,\r\n        message: newMessage.message,\r\n        isPrivate: newMessage.isPrivate,\r\n      }\r\n    ]);\r\n  });\r\n    return (\r\n      <>\r\n        {/* for the logic here we use the short circuit method since are \r\n        checking for just one condition authenticated */}\r\n        {isAuthenticated && (\r\n          <Container className= \"Messanger\">\r\n            <Row>\r\n                <Col\r\n                  xs={5}\r\n              >\r\n                <Card className='leftpane'>\r\n                  <br />\r\n                  <h6>\r\n                    Email : <b>{user.email }</b>\r\n                  </h6>\r\n                  <br />\r\n                  <h6>\r\n                    Users Online:\r\n                  </h6>\r\n                  <ul>\r\n                    {messangerUsers.map((user) => {\r\n                      return (\r\n                        <li\r\n                          onClick={enteringRoom}\r\n                          key={user}>\r\n                          {user}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                  </Card>\r\n              </Col>\r\n              &nbsp; &nbsp;\r\n              <Col className=\"mainpane\">\r\n                <p>Messanger({ currentRoom})</p>\r\n                <div id='messangerMessages'>&nbsp; &nbsp; Messages:\r\n                  <Card>\r\n                    <ul>{messageList.map((messanger, index) => {\r\n                      return (\r\n                        <li key={index}>\r\n                          <i>{messanger.name}: </i>\r\n                          <i>\r\n                            <span style={{ color: 'black' }}>\r\n                              <b>{messanger.message}</b>\r\n                            </span>\r\n                          </i>\r\n                        </li>\r\n                      );\r\n                    })}</ul>\r\n                  </Card>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Col className=\"bottompane\">\r\n              <form onSubmit={submitNewMessage}>\r\n              <input\r\n                  type='text'\r\n                  name='message'\r\n                  class='form-control'\r\n                  value={messangerMessage.message}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <br />\r\n                <input\r\n                  type='submit'\r\n                  class='btn btn-success btn-sm'\r\n                  value='send'\r\n                />\r\n                <br />\r\n                <br />\r\n            </form>\r\n            </Col>\r\n          </Container>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Messanger;\r\n","import React from 'react';\r\nimport { Button, Card} from 'react-bootstrap';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst Profile = () => {\r\n  const { user, logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <Card>\r\n          <div class='col-md-8'>\r\n        <h1>Profile Information</h1>\r\n\r\n        <div class='d-flex justify-content-center'>\r\n          <div className='col-md-2 mb-3'>\r\n            <img\r\n              src={user.picture}\r\n              alt='Profile'\r\n              className='rounded-circle img-fluid profile-picture mb-3 mb-md-0'\r\n            />\r\n          </div>\r\n          <div class='form-group'>\r\n          <fieldset>\r\n            <Button className='btn btn-dark' onClick={() => logout()}>\r\n              Logout\r\n            </Button>\r\n          </fieldset>\r\n        </div>\r\n        </div>\r\n\r\n        <div class='form-group'>\r\n          <fieldset disabled=''>\r\n            <label class='form-label' for='disabledInput'>\r\n              Name\r\n            </label>\r\n            <input\r\n              class='form-control'\r\n              id='readOnlyInput'\r\n              type='text'\r\n              placeholder={user.name}\r\n              readonly=''\r\n            />\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div class='form-group'>\r\n          <fieldset>\r\n            <label class='form-label mt-4' for='readOnlyInput'>\r\n              Email\r\n            </label>\r\n            <input\r\n              class='form-control'\r\n              id='readOnlyInput'\r\n              type='text'\r\n              placeholder={user.email}\r\n              readonly=''\r\n            />\r\n          </fieldset>\r\n        </div>\r\n\r\n\r\n        <div class='form-group'>\r\n          <fieldset>\r\n            <label class='form-label mt-4' for='readOnlyInput'>\r\n              location\r\n            </label>\r\n            <input\r\n              class='form-control'\r\n              id='readOnlyInput'\r\n              type='text'\r\n              placeholder={user.locale}\r\n              readonly=''\r\n            />\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div class='form-group'>\r\n          <fieldset>\r\n            <label class='form-label mt-4' for='readOnlyInput'>\r\n              Last Profile Update\r\n            </label>\r\n            <input\r\n              class='form-control'\r\n              id='readOnlyInput'\r\n              type='text'\r\n              placeholder={user.updated_at}\r\n              readonly=''\r\n            />\r\n          </fieldset>\r\n        </div>\r\n\r\n        <br />\r\n\r\n        \r\n      </div>\r\n      </Card>\r\n      \r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\n","import React,{ createContext} from 'react';\nimport { BrowserRouter as Router, Route, withRouter} from 'react-router-dom';\nimport axios from 'axios';\n\n\nimport { Container } from 'react-bootstrap';\n\nimport Header from './components/Header';\nimport MessageBoard from './components/MessageBoard'; //home\nimport Home from './components/Home'; //welcome\nimport Messanger from './components/Messanger';// chat\nimport Profile from './components/authentication/Profile';\n\n// we make use of the react hook createContext to handle prop drilling: that is\n//the situation where we are passing props between multiple components\nexport const userContext = createContext();\n\nconst App = () => {\n  const [userAccessData, setUserAccessData] = React.useState({\n    token: undefined,\n    user: undefined,\n  });\n\n  //our login function whenever the user logs in we expect a token which would be used to\n  //verify the user logged in\n  const isLoggedIn = async () => {\n    let token = localStorage.getItem('auth-token');\n    if (token == null) {\n      localStorage.setItem('auth-token', '');\n      token = '';\n    }\n    const tokenResponse = await axios.post('/users/isTokenValid', null, {\n      headers: { 'auth-token': token },\n    });\n    console.log(tokenResponse.data);\n    if (tokenResponse.data) {\n      const userResponse = await axios.get('/users/profile', {\n        headers: { 'auth-token': token },\n      });\n      setUserAccessData({\n        token,\n        user: userResponse.data,\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    isLoggedIn();\n  }, []);\n\n  return (\n    <>\n    \n    <userContext.Provider value={{ userAccessData, setUserAccessData }}>\n      <Router>\n        <Header />\n          <Container>\n            <Route path='/' exact component={withRouter(Home)} />\n            <Route path='/message-board' component={withRouter(MessageBoard)} />\n            <Route path='/message' component={withRouter(Messanger)} />\n            <Route path='/profile' component={Profile} />\n         </Container>\n      </Router>\n      </userContext.Provider>\n      {/* <Home></Home> */}\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport reportWebVitals from './reportWebVitals';\n\nconst domain = 'dev-zk8avpa2.us.auth0.com';\nconst clientID = 'kuTG1pdRo9fMMUY6CvgBfjAdRWQERgo2';\n\nReactDOM.render(\n  \n    <Auth0Provider domain={domain} clientId={clientID} redirectUri={window.location.origin}>\n      <App />\n    </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}